//@version=5
indicator("smash levels", overlay=true, max_bars_back=1000)

// Inputs
esSpxArb = input.int(9, title="ES - SPX", minval=0, maxval=100)
dailyLevelsInput = input.text_area(defval="", title="ES daily levels")
weeklyLevelsInput = input.text_area(defval="", title="ES weekly levels")
vixLevelsInput = input.text_area(defval="", title="VIX levels")

// Time Inputs
sessionStartHour = input.int(9, title="Start Time", minval=0, maxval=23, step=1, tooltip="Hour values greater than 16 will push into the next day's session and will be off by one hour due to market settlement hour.", inline="a", group="Time")
sessionStartMinute = input.int(30, title=" ", minval=0, maxval=59, step=1, inline="a", group="Time")
sessionEndHour = input.int(16, title="End Time", minval=0, maxval=23, step=1, tooltip="Hour values greater than 16 will push into the next day's session and will be off by one hour due to market settlement hour.", inline="b", group="Time")
sessionEndMinute = input.int(0, title=" ", minval=0, maxval=59, step=1, inline="b", group="Time")
extendZoneRight = input.bool(false, title="Extend Zones Right?", inline="c")
extendZoneLeft = input.bool(false, title="Extend Zones Left?", inline="c")

showDailyLevels = input.bool(true, title="Show Daily levels?", inline="d")
showWeeklyLevels = input.bool(true, title="Show Weekly levels?", inline="d")

// Market and Time Settings
isSPX = syminfo.root == "SPX" or syminfo.root == "US500"
isES = syminfo.root == "ES" or syminfo.root == "MES"
isVIX = syminfo.root == "VIX"
multiplier = isSPX ? esSpxArb : isES ? 1 : na

zoneExtension = extendZoneRight ? extend.right : extendZoneLeft ? extend.left : extend.none
openSession = hour == sessionStartHour and minute == sessionStartMinute
leftIndex = ta.barssince(openSession)
sessionDuration = (sessionEndHour - sessionStartHour - 1) * 60 + math.abs(sessionEndMinute - sessionStartMinute)
rightIndex = sessionDuration / timeframe.multiplier

// Function to process levels
processLevels(levelInput, showLevels, textColor, alignRight = false) =>
    var lines = str.split(levelInput, "\n")
    for i = 0 to array.size(lines) - 1
        line = array.get(lines, i)
        if str.length(line) > 0
            columns = str.split(line, ",")
            level = str.tonumber(array.get(columns, 0))
            label = array.get(columns, 1)
            
            price = isVIX ? level : isSPX ? level - multiplier : isES ? level : na
            
            if (showLevels or isVIX)  // Always show VIX levels
                borderColor = close > price ? color.green : close < price ? color.red : color.white
                bgColor = close > price ? color.new(color.green, 99) : close < price ? color.new(color.red, 99) : color.new(color.white, 99)
                
                box.new(bar_index[leftIndex], price, bar_index[leftIndex] + rightIndex, price,
                     border_color=borderColor,
                     extend=zoneExtension,
                     bgcolor=bgColor,
                     text_color=textColor,
                     text=label,
                     text_size=size.normal,
                     text_halign=alignRight ? text.align_right : text.align_left)

// Process all level types
processLevels(dailyLevelsInput, showDailyLevels, color.white)
processLevels(weeklyLevelsInput, showWeeklyLevels, color.yellow, true)
processLevels(vixLevelsInput, true, color.yellow, true)
