//@version=5
indicator("eminiplayer zones", overlay=true, max_bars_back=1000)

// Market Settings
indexarb = input.int(37, title="ES - SPX", minval=0, maxval=100)

// Price Levels Input
textarea = input.text_area(defval = "", title = "ES daily levels")

// Time Settings
ohour   = input.int(9, title="Start Time", minval=0, maxval=23, step=1, tooltip="Hour values greater than 16 will push into the next day's session and will be off by one hour due to market settlement hour.", inline="a", group="Time")
ominute = input.int(30, title=" ", minval=0, maxval=59, step=1, inline="a", group="Time")
chour   = input.int(16, title="End Time", minval=0, maxval=23, step=1, tooltip="Hour values greater than 16 will push into the next day's session and will be off by one hour due to market settlement hour.", inline="b", group="Time")
cminute = input.int(0, title=" ", minval=0, maxval=59, step=1, inline="b", group="Time")

// Zone Display Settings
ext    = input.bool(false, title="Extend Zones Right?", inline="c")
extl   = input.bool(false, title="Extend Zones Left?", inline="c")
extend = ext ? extend.right : extl ? extend.left : extend.none

// Market Detection and Multiplier Logic
IsSPX  = syminfo.root == "SPX" or syminfo.root == "US500"
IsES   = syminfo.root == "ES" or syminfo.root == "MES"
m      = IsSPX ? indexarb : IsES ? 1 : na

// Time Range Calculation
openTime = hour == ohour and minute == ominute
left = ta.barssince(openTime)
timerange = (chour - ohour - 1)*60 + math.abs(cminute - ominute)
right = timerange / timeframe.multiplier

// Process Price Levels and Create Zones
lines = str.split(textarea, "\n")
for i = 0 to array.size(lines) - 1
    line = array.get(lines, i)
    columns = str.split(line, ",")
    
    price_low = str.tonumber(array.get(columns, 0))
    price_high = str.tonumber(array.get(columns, 1))
    zone_type = array.get(columns, 3)
    
    zone_top = IsSPX ? price_high - m : IsES ? price_high : na
    zone_bottom = IsSPX ? price_low - m : IsES ? price_low : na
    
    border_color = close > zone_top ? color.green : close < zone_bottom ? color.red : color.white
    bg_color = close > zone_top ? color.new(color.green, 99) : close < zone_bottom ? color.new(color.red, 99) : color.new(color.white, 99)
    
    box.new(bar_index[left], zone_top, bar_index[left] + right, zone_bottom, 
         border_color=border_color, 
         extend=extend, 
         bgcolor=bg_color, 
         text_color=color.white, 
         text=zone_type,
         text_size=size.normal)
